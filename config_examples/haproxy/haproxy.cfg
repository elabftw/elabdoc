# HAProxy config example for eLabFTW (https://www.elabftw.net)

# GLOBAL CONFIG
global
    # max number of sessions (default 2000)
    maxconn 5000

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private
    tune.ssl.default-dh-param 2048

    # log to stdout
    log stdout format raw local0 info

    # Default ciphers to use on SSL-enabled listening sockets
    # from https://mozilla.github.io/server-side-tls/ssl-config-generator/
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

# DEFAULTS
defaults
    mode    http

    timeout connect 5000
    timeout client  50000
    timeout server  50000

    # logs
    log global
    option  httplog
    option  dontlognull

    option forwardfor
    option http-server-close

    # use gzip compression
    compression algo gzip

# HTTP FRONTEND
frontend http-in
    bind :::80 v4v6

    acl missing_cl hdr_cnt(Content-length) eq 0
    http-request deny if HTTP_URL_STAR !METH_OPTIONS || METH_POST missing_cl
    http-request deny if METH_GET HTTP_CONTENT
    http-request deny unless METH_GET or METH_POST or METH_OPTIONS
    # httpoxy.org
    http-request del-header Proxy

    # don't log HEAD requests from uptimerobot
    http-request set-log-level silent if METH_HEAD

    # evil acl
    acl evil path_beg -f /usr/local/etc/haproxy/acl-evil.lst
    # don't log the denied stuff
    http-request set-log-level silent if evil
    http-request silent-drop if evil

    # letsencrypt
    acl letsencrypt-acl path_beg /.well-known/acme-challenge/

    # add header to say we're coming from http
    http-request add-header X-Forwarded-Proto http

    redirect prefix https://elabftw.example.org code 301 if { hdr(host) -i elabftw.example.org } !letsencrypt-acl

    use_backend letsencrypt-backend if letsencrypt-acl
    default_backend defaultback

# HTTPS FRONTEND
frontend https-in
    # use a script to concatenate the let's encrypt files into one file so haproxy can read it
    # example script:
    #
    # #!/usr/bin/env bash
    # set -eu
    # DOMAIN=elabftw.example.org
    # certbot renew --http-01-port=8989
    # cat "/etc/letsencrypt/live/elabftw.example.org/fullchain.pem" "/etc/letsencrypt/live/elabftw.example.org/privkey.pem" > "/path/to/haproxy/certs/elabftw.example.org-haproxy.pem"
    # /usr/bin/docker compose -f /path/to/docker-compose.yml restart haproxy
    #
    bind :::443 v4v6 ssl crt /usr/local/etc/haproxy/certs/elabftw.example.org-haproxy.pem alpn h2,http/1.1

    # stats
    stats enable
    stats uri /stats
    # CHANGE THIS
    stats auth your_user:your_password_hash
    stats refresh 10s

    # httpoxy.org
    http-request del-header Proxy

    # letsencrypt
    acl letsencrypt-acl path_beg /.well-known/acme-challenge/

    # don't log HEAD requests from uptimerobot
    http-request set-log-level silent if METH_HEAD

    # evil acl
    acl evil path_beg -f /usr/local/etc/haproxy/acl-evil.lst
    # don't log the denied stuff
    http-request set-log-level silent if evil
    http-request silent-drop if evil

    # add header to say we're coming from https
    http-request add-header X-Forwarded-Proto https

    use_backend letsencrypt-backend if letsencrypt-acl
    use_backend netdata if netdata-acl

    default_backend defaultback

# BACKENDS
backend defaultback
    description eLabFTW
    server elabftw-1 elabftw:443 check port 443
    # you can have several elabftw containers if you use redis for php sessions
    #server elabftw-2 elabftw:443 check port 443
